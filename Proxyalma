#!/bin/sh

# Check if script is run as root
if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

random() {
    tr </dev/urandom -dc A-Za-z0-9 | head -c5
    echo
}

array=(1 2 3 4 5 6 7 8 9 0 a b c d e f)
gen64() {
    ip64() {
        echo "${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}"
    }
    echo "$1:$(ip64):$(ip64):$(ip64):$(ip64)"
}

install_3proxy() {
    echo "Installing 3proxy"
    URL="https://raw.githubusercontent.com/quayvlog/quayvlog/main/3proxy-3proxy-0.8.6.tar.gz"
    wget -qO- $URL | bsdtar -xvf-
    cd 3proxy-3proxy-0.8.6
    make -f Makefile.Linux
    mkdir -p /usr/local/etc/3proxy/{bin,logs,stat}
    cp src/3proxy /usr/local/etc/3proxy/bin/
    cp ./scripts/rc.d/proxy.sh /etc/init.d/3proxy
    chmod +x /etc/init.d/3proxy
    cd $WORKDIR
}

gen_3proxy() {
  cat <<EOF
daemon
maxconn 1000
nscache 65536
timeouts 1 5 30 60 180 1800 15 60
setgid 65535
setuid 65535
flush
auth strong

users $(awk -F "/" 'BEGIN{ORS="";} {print $1 ":CL:" $2 " "}' ${WORKDATA})

$(awk -F "/" '{print "auth strong\n" \
"allow " $1 "\n" \
"proxy -6 -n -a -p" $4 " -i" $3 " -e"$5"\n" \
"flush\n"}' ${WORKDATA})
EOF
}

gen_proxy_file_for_user() {
    cat >proxy.txt <<EOF
$(awk -F "/" '{print $3 ":" $4 ":" $1 ":" $2 }' ${WORKDATA})
EOF
}

print_proxy() {
    echo "Proxy is ready! Format IP:PORT:LOGIN:PASS"
    echo "Here are your proxy details:"
    cat proxy.txt
}

gen_data() {
    seq $FIRST_PORT $LAST_PORT | while read port; do
        username="user$(random)"
        password="pass$(random)"
        echo "$username/$password/$IP4/$port/$(gen64 $IP6)"
    done
}

gen_iptables() {
    cat <<EOF
$(awk -F "/" '{print "iptables -I INPUT -p tcp --dport " $4 "  -m state --state NEW -j ACCEPT"}' ${WORKDATA})
EOF
}

gen_ifconfig() {
    cat <<EOF
$(awk -F "/" '{print "ip -6 addr add " $5 "/64 dev enp1s0"}' ${WORKDATA})
EOF
}

echo "Installing required packages"
yum -y install gcc net-tools bsdtar zip curl >/dev/null

install_3proxy

echo "Working folder = /home/proxy-installer"
WORKDIR="/home/proxy-installer"
WORKDATA="${WORKDIR}/data.txt"
mkdir -p $WORKDIR && cd $_

IP4=$(curl -4 -s icanhazip.com)
IP6=$(curl -6 -s icanhazip.com | cut -f1-4 -d':')

echo "Internal IP = ${IP4}. External subnet for IPv6 = ${IP6}"

echo "How many proxies do you want to create? Example: 500"
read COUNT

FIRST_PORT=10000
LAST_PORT=$(($FIRST_PORT + $COUNT))

gen_data >$WORKDIR/data.txt
gen_iptables >$WORKDIR/boot_iptables.sh
gen_ifconfig >$WORKDIR/boot_ifconfig.sh
chmod +x ${WORKDIR}/boot_*.sh

gen_3proxy >/usr/local/etc/3proxy/3proxy.cfg

# Increase file descriptor limit
echo "* soft nofile 65535" >> /etc/security/limits.conf
echo "* hard nofile 65535" >> /etc/security/limits.conf

# Create systemd service file
cat > /etc/systemd/system/3proxy.service <<EOF
[Unit]
Description=3proxy tiny proxy server
After=network.target

[Service]
Type=simple
ExecStartPre=/bin/bash -c '${WORKDIR}/boot_iptables.sh'
ExecStartPre=/bin/bash -c '${WORKDIR}/boot_ifconfig.sh'
ExecStartPre=/bin/sleep 5
ExecStart=/usr/local/etc/3proxy/bin/3proxy /usr/local/etc/3proxy/3proxy.cfg
ExecStop=/bin/kill -TERM \$MAINPID
LimitNOFILE=65535
Restart=on-failure
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Add logging
echo "log /var/log/3proxy.log D" >> /usr/local/etc/3proxy/3proxy.cfg
echo "rotate 10" >> /usr/local/etc/3proxy/3proxy.cfg

# Create log file and set permissions
touch /var/log/3proxy.log
chown nobody:nobody /var/log/3proxy.log
chmod 644 /var/log/3proxy.log

# Check 3proxy configuration
echo "Checking 3proxy configuration..."
/usr/local/etc/3proxy/bin/3proxy -C /usr/local/etc/3proxy/3proxy.cfg

# Reload systemd, enable and start 3proxy service
systemctl daemon-reload
systemctl enable 3proxy
systemctl start 3proxy

# Wait for 3proxy to fully start
echo "Waiting for 3proxy to fully start..."
sleep 10

# Check 3proxy status
echo "Checking 3proxy status..."
systemctl status 3proxy

# Check 3proxy log
echo "Checking 3proxy log..."
if [ -f /var/log/3proxy.log ]; then
    tail -n 20 /var/log/3proxy.log
else
    echo "Log file not found. Check if 3proxy is logging correctly."
fi

# Check listening ports
echo "Checking listening ports..."
netstat -tulpn | grep 3proxy

# Test proxy connection
echo "Testing proxy connection..."
gen_proxy_file_for_user
PROXY_LINE=$(head -n 1 proxy.txt)
IP=$(echo $PROXY_LINE | cut -d':' -f1)
PORT=$(echo $PROXY_LINE | cut -d':' -f2)
USER=$(echo $PROXY_LINE | cut -d':' -f3)
PASS=$(echo $PROXY_LINE | cut -d':' -f4)
curl -x $USER:$PASS@$IP:$PORT https://ifconfig.me

# Check firewall rules
echo "Checking firewall rules..."
iptables -L -n | grep -E "($FIRST_PORT|$LAST_PORT)"

print_proxy

echo "3proxy has been installed and configured as a systemd service."
echo "Check /var/log/3proxy.log for logs."
echo "You can start/stop/restart the service using:"
echo "systemctl start/stop/restart 3proxy"

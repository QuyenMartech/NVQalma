#!/bin/bash

# Check if script is run as root
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi

random() {
    tr </dev/urandom -dc A-Za-z0-9 | head -c5
    echo
}

array=(1 2 3 4 5 6 7 8 9 0 a b c d e f)
gen64() {
    ip64() {
        echo "${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}"
    }
    echo "$1:$(ip64):$(ip64):$(ip64):$(ip64)"
}

install_3proxy() {
    echo "Installing 3proxy"
    URL="https://raw.githubusercontent.com/quayvlog/quayvlog/main/3proxy-3proxy-0.8.6.tar.gz"
    wget -qO- $URL | bsdtar -xvf-
    cd 3proxy-3proxy-0.8.6
    make -f Makefile.Linux
    mkdir -p /usr/local/etc/3proxy/{bin,logs,stat}
    cp src/3proxy /usr/local/etc/3proxy/bin/
    cp ./scripts/rc.d/proxy.sh /etc/init.d/3proxy
    chmod +x /etc/init.d/3proxy
    chkconfig 3proxy on
    cd $WORKDIR
}

gen_3proxy() {
    cat <<EOF
daemon
maxconn 1000
nscache 65536
timeouts 1 5 30 60 180 1800 15 60
setgid 65535
setuid 65535
flush
auth strong

users $(awk -F "/" 'BEGIN{ORS="";} {print $1 ":CL:" $2 " "}' ${WORKDATA})

$(awk -F "/" '{print "auth strong\n"
"allow " $1 "\n"
"proxy -6 -n -a -p" $4 " -i" $3 " -e"$5"\n"
"flush\n"}' ${WORKDATA})

log /usr/local/etc/3proxy/logs/3proxy.log D
rotate 10
EOF
}

gen_proxy_file_for_user() {
    cat >proxy.txt <<EOF
$(awk -F "/" '{print $3 ":" $4 ":" $1 ":" $2 }' ${WORKDATA})
EOF
}

print_proxy() {
    echo "Proxy is ready! Format IP:PORT:LOGIN:PASS"
    echo "Here are your proxy details:"
    cat proxy.txt
}

gen_data() {
    seq $FIRST_PORT $LAST_PORT | while read port; do
        username="user$(random)"
        password="pass$(random)"
        echo "$username/$password/$IP4/$port/$(gen64 $IP6)"
    done
}

gen_iptables() {
    cat <<EOF
$(awk -F "/" '{print "iptables -I INPUT -p tcp --dport " $4 " -m state --state NEW -j ACCEPT"}' ${WORKDATA})
EOF
}

gen_ifconfig() {
    cat <<EOF
$(awk -F "/" '{print "ip -6 addr add " $5 "/64 dev enp1s0"}' ${WORKDATA})
EOF
}

echo "Installing required packages"
yum -y install gcc net-tools bsdtar zip iptables-services wget curl >/dev/null

install_3proxy

echo "Working folder = /home/proxy-installer"
WORKDIR="/home/proxy-installer"
WORKDATA="${WORKDIR}/data.txt"
mkdir -p $WORKDIR && cd $_

IP4=$(curl -4 -s icanhazip.com)
IP6=$(curl -6 -s icanhazip.com | cut -f1-4 -d':')

echo "Internal IP = ${IP4}. External subnet for IPv6 = ${IP6}"

echo "How many proxies do you want to create? Example: 500"
read COUNT

FIRST_PORT=10000
LAST_PORT=$(($FIRST_PORT + $COUNT))

gen_data >$WORKDIR/data.txt
gen_iptables >$WORKDIR/boot_iptables.sh
gen_ifconfig >$WORKDIR/boot_ifconfig.sh
chmod +x ${WORKDIR}/boot_*.sh /etc/rc.local

gen_3proxy >/usr/local/etc/3proxy/3proxy.cfg

# Increase file descriptor limit
echo "* soft nofile 65535" >> /etc/security/limits.conf
echo "* hard nofile 65535" >> /etc/security/limits.conf

cat >>/etc/rc.local <<EOF
#!/bin/bash
bash ${WORKDIR}/boot_iptables.sh
bash ${WORKDIR}/boot_ifconfig.sh
ulimit -n 65535
sleep 5
systemctl start 3proxy
EOF

chmod +x /etc/rc.local

# Create log directory and set permissions
mkdir -p /usr/local/etc/3proxy/logs
chmod 777 /usr/local/etc/3proxy/logs

# Create systemd service file for 3proxy
cat > /etc/systemd/system/3proxy.service <<EOF
[Unit]
Description=3proxy tiny proxy server
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/etc/3proxy/bin/3proxy /usr/local/etc/3proxy/3proxy.cfg
Restart=always
RestartSec=3
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd, enable and start 3proxy service
systemctl daemon-reload
systemctl enable 3proxy
systemctl start 3proxy

gen_proxy_file_for_user

print_proxy

echo "3proxy has been installed and configured. Check /usr/local/etc/3proxy/logs/3proxy.log for logs."

# Wait for 3proxy to start and check its status
sleep 10
systemctl status 3proxy

# Check if 3proxy is listening on the configured ports
netstat -tulpn | grep 3proxy

# Display the last few lines of the 3proxy log
tail -n 20 /usr/local/etc/3proxy/logs/3proxy.log

# Enable and start iptables
systemctl enable iptables
systemctl start iptables

# Apply iptables rules
bash ${WORKDIR}/boot_iptables.sh

# Restart network service to apply new IPv6 addresses
systemctl restart network

# Final check
echo "Checking 3proxy status again after all configurations:"
systemctl status 3proxy

# Additional debugging steps
echo "Checking 3proxy configuration file:"
cat /usr/local/etc/3proxy/3proxy.cfg

echo "Checking 3proxy log file:"
tail -n 50 /usr/local/etc/3proxy/logs/3proxy.log

echo "Checking IPv6 addresses:"
ip -6 addr show

echo "Checking iptables rules:"
iptables -L -n -v

echo "Checking if 3proxy binary exists and is executable:"
ls -l /usr/local/etc/3proxy/bin/3proxy

echo "Trying to run 3proxy manually:"
/usr/local/etc/3proxy/bin/3proxy /usr/local/etc/3proxy/3proxy.cfg

echo "Script completed. Please check the output above for any errors."
